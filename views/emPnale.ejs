<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('partials/head.ejs') %>
    <link rel="stylesheet" type="text/css" href="/css/vendors/daterange-picker.css">
    <style>
      td.off {
        pointer-events: none;
        background-color: #cccccc;
        cursor: not-allowed;
      }
    </style>
</head>

<body>
  <%- include('partials/sidebar.ejs') %>

    <div class="page-body">

      <div class="container-fluid">
        <div class="page-title" `>
          <div class="row align-items-center">
            <div class="col-12 col-md-6 text-center text-md-start mb-2 mb-md-0">
              <h3>Employee List</h3>
            </div>
            <div class="col-12 col-md-6 text-center text-md-end">
              <ol class="breadcrumb justify-content-center justify-content-md-end mb-0">
                <li class="breadcrumb-item"><a href="/employee/dashboard"><i data-feather="home"
                      class="me-2"></i>Dashboard</a></li>

              </ol>
            </div>
          </div>
        </div>
      </div>


      <div class="container-fluid dashboard-default general-widget">
        <div class="row justify-content-between">

          <div class="col-12 col-md-12 col-lg-5 col-xl-4 order-lg-3">
            <div class="d-flex justify-content-center">

              <div class="card border-0 overflow-hidden" style="width:100%;">
                <div class="p-4">

                  <!-- Profile Image -->
                  <div class="card-body d-flex justify-content-center mb-3">
                    <img class="rounded-circle border border-3 border-primary" src="/uploads/<%= data?.profileimage %>"
                      height="110" width="110" alt="Profile" loading="lazy" />
                  </div>

                  <!-- Hidden Employee ID -->
                  <input type="hidden" value="<%= data?.id %>" id="emplyeeId" />

                  <!-- Username -->
                  <div class="text-center profile-details mb-4">
                    <a href="#" class="text-decoration-none text-dark">
                      <h4 class="fw-semibold mb-0">
                        <%= data?.userName %>
                      </h4>
                    </a>
                  </div>

                  <!-- "My Timing" label -->
                  <div class="d-flex align-items-center ps-2 mb-5" style="margin-left: -33px;">
                    <div class="border-end border-5 border-primary rounded" style="height: 20px;"></div>
                    <span class="ms-2 fw-semibold">My Timing</span>
                  </div>

                  <!-- Timing Section -->
                  <div class="d-flex justify-content-center mb-4">
                    <div class="d-flex flex-wrap justify-content-center align-items-center gap-4">

                      <!-- Current Time -->
                      <div class="text-center">
                        <h6 class="text-success mb-1 fw-bold">Current Time</h6>
                        <h5 class="fs-5" id="curanttime">
                          <span id="hou">00</span>:<span id="min">00</span>:<span id="sec">00</span>
                        </h5>
                      </div>

                      <!-- Vertical Divider -->
                      <div class="vr rounded" style="height: 50px; width: 2px; background-color: rgb(228, 226, 226);">
                      </div>

                      <!-- Break Time -->
                      <div class="text-center">
                        <h6 class="text-danger mb-1 fw-bold">Break Time</h6>
                        <h5 class="fs-5" id="breactime">
                          <span id="hou2">00</span>:<span id="min2">00</span>:<span id="sec2">00</span>
                        </h5>
                      </div>

                    </div>
                  </div>

                  <!-- Action Buttons -->
                  <div class="social-btngroup d-flex justify-content-center">


                    <button class="btn btn-outline-danger rounded me-2 col-6 d-none" id="break" type="button"
                      data-bs-original-title="" title="">
                      BREAK
                    </button>

                    <button class="btn btn-square btn-success rounded col-12" type="button" data-bs-original-title=""
                      title="" id="clockin">
                      CLOCK IN
                    </button>
                    <button class="btn btn-square btn-danger rounded col-6 d-none" type="button"
                      data-bs-original-title="" title="" id="clockout">
                      CLOCK OUT
                    </button>
                  </div>


                </div>

                <!-- Hidden Data -->
                <div id="emp-data" data-break="<%= Break || '00:00:00' %>" data-work="<%= Working || '00:00:00' %>"
                  data-status="<%= status || '' %>" style="display: none">
                </div>

              </div>

            </div>


            <input type="hidden" id="datelistnoleave">

          </div>

          <div class="col-12 col-md-12 col-lg-8 col-xl-4 mb-1">
            <div class="card profile-greeting p-4 p-md-5">
              <div class="card-body text-center text-md-start">
                <!-- Top Right Content (optional space) -->
                <div class="d-flex justify-content-end d-none d-sm-flex"></div>

                <!-- User Greeting Section -->
                <div class="greeting-user">
                  <div class="profile-vector position-relative">
                    <!-- Dot Decorations -->
                    <ul class="dots-images position-absolute top-0 start-0 w-100 h-100 d-xl-none">
                      <li class="dot-small bg-info dot-1"></li>
                      <li class="dot-medium bg-primary dot-2"></li>
                      <li class="dot-medium bg-info dot-3"></li>
                      <li class="semi-medium bg-primary dot-4"></li>
                      <li class="dot-small bg-info dot-5"></li>
                      <li class="dot-big bg-info dot-6"></li>
                      <li class="dot-small bg-primary dot-7"></li>
                      <li class="semi-medium bg-primary dot-8"></li>
                      <li class="dot-big bg-info dot-9"></li>
                    </ul>

                    <!-- Profile Image -->
                    <img class="img-fluid rounded-circle mx-auto d-block"
                      style="width: 160px; height: 150px; object-fit: cover;" src="/uploads/<%= data?.profileimage %>"
                      alt="" loading="lazy">

                    <!-- Ribbons -->
                    <ul class="vector-image">
                      <li><img src="../images/dashboard/default/ribbon1.png" alt="" loading="lazy"></li>
                      <li><img src="../images/dashboard/default/ribbon3.png" alt="" loading="lazy"></li>
                      <li><img src="../images/dashboard/default/ribbon4.png" class="d-none" alt="" loading="lazy"></li>
                      <li><img src="../images/dashboard/default/ribbon5.png" class="d-none" alt="" loading="lazy"></li>
                      <li><img src="../images/dashboard/default/ribbon6.png" alt="" loading="lazy"></li>
                      <li><img src="../images/dashboard/default/ribbon7.png" alt="" loading="lazy"></li>
                    </ul>
                  </div>

                  <!-- Welcome Message -->
                  <h3 class="mt-3" style="font-size: 22px;">
                    <a href="#" class="text-decoration-none text-dark">
                      <span>Welcome Back </span>
                      <%= employeedetais[0].firstName %>
                    </a>
                    <span class="right-circle ms-2">
                      <i class="fa fa-check-circle font-primary f-14 middle"></i>
                    </span>
                  </h3>
                </div>
              </div>
            </div>
          </div>

          <div class="col-12 col-md-12 col-lg-4 col-xl-4 mb-1">
            <div class="row">

              <% if(leftdaysobj.leftdays !==0){ %>
                <div class="col-12 col-sm-12 col-lg-12">
                  <div class="d-flex justify-content-center">
                    <div class="card total-investment mb-2" style="width: 100%; height: 100px;">
                      <div class="card-header pb-0 pt-3">
                        <div class="d-flex justify-content-between">
                          <div class="flex-grow-1">
                            <div class="d-flex justify-content-between">
                              <p class="square-after f-w-600 header-text-primary">Notice Period <%=leftdaysobj.enddays%>
                                  <i class="fa fa-circle"></i>
                              </p>

                            </div>
                            <h5 class="text-nowrap">
                              <%=leftdaysobj.leftdays%> days left
                            </h5>
                          </div>
                        </div>
                      </div>

                    </div>
                  </div>
                </div>
                <%}%>
                  <div class="col-12 col-sm-12 col-lg-12">
                    <div class="d-flex justify-content-center">
                      <div class="card total-investment mb-2" style="width: 100%; height: 100px;">
                        <div class="card-header pb-0 pt-3">
                          <div class="d-flex justify-content-between">
                            <div class="flex-grow-1">
                              <div class="d-flex justify-content-between">
                                <p class="square-after f-w-600 header-text-primary">Payroll Date <%=payrollobj.payDate%>
                                    <i class="fa fa-circle"></i>
                                </p>

                              </div>
                              <h5 class="text-nowrap">
                                <%=payrollobj.dayDifference%> days left
                              </h5>
                            </div>
                          </div>
                        </div>

                      </div>
                    </div>
                  </div>



            </div>

            <div class="d-flex justify-content-center">
              <div class="card appointment-detail" style="width: 100%;">
                <div class="card-header pb-0 ">
                  <div class="d-flex justify-content-between">
                    <div class="flex-grow-1">
                      <p class="square-after f-w-600 header-text-primary">Upcoming Birthday (<%= BrithDayArr.length %>)
                          🎂
                          <i class="fa fa-circle"></i></p>
                    </div>
                  </div>
                </div>
                <div class="card-body" style="padding-top: 15px !important ;">
                  <div class="table-responsive theme-scrollbar">
                    <table class="table">
                      <tbody>
                        <% if (BrithDayArr.length> 0) { %>
                          <% BrithDayArr.forEach((val)=> { %>
                            <tr>
                              <td>
                                <div class="d-flex"><img src="/uploads/<%= val.profileimage %>" alt=""
                                    class="img-fluid rounded-circle d-inline-block align-top me-2"
                                    style="width: 45px; height: 45px; object-fit: cover;" loading="lazy">

                                  <div class="flex-grow-1 text-nowrap ms-2"><a href=""><span>
                                        <%= val.firstName %>
                                      </span></a>
                                    <p class="mb-0">Age: <%= val.age %>
                                    </p>
                                  </div>

                                </div>
                              </td>
                              <td class="text-end text-nowrap">
                                 <% if(val.today){ %>
                                  Today
                                  <% }else { %>
                                <%= new Date(val.birthDate).toLocaleString('en-US', { day: '2-digit' , month: 'short' ,
                                  timeZone: 'Asia/Kolkata' }).split(" ").reverse().join(" ") %>
                                  <% } %>
                            </td>
                                 
                          </tr>
                          <% }) %>
                            <% } else { %>
                              <tr class=" text-center">
                              <td>
                                <img src="/images/no-birthday.svg" class="mb-3" alt="">
                                <p>No birthday for this month.</p>
                              </td>
                            </tr>
                            <% } %>
                      </tbody>
                    </table>
                  </div>

                </div>
              </div>
            </div>

          </div>






        </div>

        <!-- Container-fluid Ends-->
      </div>


    </div>





    <!-- Day Gap Modal  -->
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-hidden="true"
      aria-labelledby="exampleModalCenter" aria-modal="true" role="dialog">
      <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content" style="background-color: transparent; border: none">
          <div class="card m-0 border-0 shadow-sm">
            <div class="card-header bg-primary text-white">
              <h5 class="mb-0">Add Attendance & Leave</h5>
            </div>
            <div class="card-body">
              <form action="/employee/rersonRoutes/<%= data.id %>" method="post" enctype="multipart/form-data"
                onsubmit="return checkIfCurrentDate(document.getElementById('leavelastDate'))">
                <div class="row">
                  <!-- Leave Type -->
                  <div class="col-md-6 mb-3">
                    <label for="leaveType" class="form-label">Leave Type</label>
                    <select name="leavetype" id="leaveType" class="form-select" required>
                      <option value="">Select Leave Type</option>
                      <%leaveType.map((val)=>{%>
                        <option value="<%=val.type_values%>">
                          <%=val.type_values%>
                        </option>
                        <%})%>
                    </select>
                  </div>
                </div>

                <div class="row date-range-picker">
                  <!-- Start Date -->
                  <div class="col-md-6 mb-3" id="onedate">
                    <div class="theme-form">
                      <label for="leaveDate" class="form-label" id="startdate-label">Date</label>
                      <input type="date" class="form-control bg-white" id="leaveDate" data-status="1" name="satrtdate"
                        required readonly />
                    </div>
                  </div>



                  <!-- "More than one day?" link -->
                  <div class="col-md-6 mb-3 font-400 d-flex align-items-end" id="linketext" style="height: 70px;">
                    <a class="text-decoration-none fw-semibold" style="cursor: pointer;"
                      onclick="$('#enddate').removeClass('d-none'); $('#linketext').addClass('d-none'); $('#onedate').addClass('d-none'); $('#leaveDate').val(''); $('#startdate-label').text('Start Date'); $('#leaveDate').remove();$('#leavelastDate').removeAttr('disabled');">
                      MORE THAN ONE DAY?
                    </a>
                  </div>

                  <!-- End Date (initially hidden) -->
                  <div class="col-md-6 mb-3 d-none" id="enddate">
                    <label for="leavelastDate" class="form-label">Set Date</label>
                    <div id="leavesatenddate">
                      <input class='form-control' type='text' name='daterange' id='leavelastDate' disabled
                        data-status='0' required>
                    </div>
                    <div class="invalid-feedback d-none" id="enddate-error">
                      End date cannot be today's date.
                    </div>
                  </div>


                </div>

                <div class="row">
                  <!-- Reason -->
                  <div class="col-12 mb-3">
                    <label for="leaveReason" class="form-label">Reason For Leave</label>
                    <textarea class="form-control" id="leaveReason" name="reason" rows="3"
                      placeholder="Type reason here..." required></textarea>
                  </div>
                </div>

                <div class="row">
                  <!-- Attachment -->
                  <div class="col-12 mb-3">
                    <label for="attachment" class="form-label d-block">Attachment (optional)</label>



                    <div class="border border-2 rounded d-inline-block position-relative" style="
                        width: 50px;
                        height: 50px;
                        border-style: dashed;
                        cursor: pointer;
                      ">
                      <input type="file" id="attachment" name="attachment"
                        class="position-absolute w-100 h-100 opacity-0" multiple />
                      <div class="d-flex align-items-center justify-content-center h-100">
                        <span class="fw-bold text-muted fs-1">+</span>
                      </div>
                    </div>
                    <!-- File name will appear here -->
                    <div id="file-name" class="mt-2 text-primary fw-semibold small"></div>
                  </div>
                </div>

                <!-- Buttons -->
                <div class="text-end">
                  <button type="button" class="btn btn-secondary me-2"
                    onclick="$('#clockout').addClass('d-none');$('#break').addClass('d-none');$('#clockin').removeClass('d-none');$('#fromhom').removeClass('d-none');"
                    data-bs-dismiss="modal">
                    Cancel
                  </button>
                  <button type="submit" class="btn btn-primary">Save</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- MissingClockOut  -->
    <div class="modal fade" id="clockOutMissing" tabindex="-1" role="dialog" aria-hidden="true"
      aria-labelledby="clockOutMissingLabel" aria-modal="true" role="dialog">
      <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content" style="background-color: transparent; border: none">
          <div class="card m-0 border-0 shadow-sm">
            <div class="card-header bg-primary text-white">
              <h5 class="mb-0">Yesterday Not Clockout</h5>
            </div>
            <div class="card-body">
              <!-- Alert for missing date -->
              <div class="alert alert-danger py-2 px-3 mb-4" role="alert" id="dateOut">
                Select ClockOut Time
              </div>

              <form action="/employee/clockmissing/<%= data.id %>" method="post">
                <!-- Radio buttons for Leave or Clock IN/OUT -->


                <!-- Clock In/Out Fields -->
                <div class="row">
                  <div class="col-md-6 mb-3">
                    <label for="clockIn" class="form-label">Clock In</label>
                    <input type="text" class="form-control bg-white" id="clockInTime" name="clockInTime" required
                      readonly />
                  </div>
                  <div class="col-md-6 mb-3">
                    <label for="clockOut" class="form-label">Clock Out</label>
                    <input type="time" class="form-control" id="clockOut" name="clockOutTime" required />
                    <small id="timeError" class="text-danger d-none">
                      Clock Out time is too early. Choose a valid time.
                    </small>

                  </div>
                </div>
                <input type="hidden" name="lastdaydate" id="lastdaydate">
                <!-- Reason -->
                <!-- <div class="mb-3">
                  <label for="reason" class="form-label">Reason <span class="text-danger">*</span></label>
                  <textarea class="form-control" id="reason" name="reason" rows="3" placeholder="Enter reason here..."
                    required></textarea>
                </div> -->

                <!-- Footer Buttons -->
                <div class="text-end">
                  <button type="button" class="btn btn-secondary me-2"
                    onclick="$('#clockOutMissing').addClass('d-none');" data-bs-dismiss="modal">
                    Cancel
                  </button>
                  <button type="submit" class="btn btn-primary">Save</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Eraly ClockOut  -->
    <div class="modal fade" id="EarlyClockOut" tabindex="-1" role="dialog" aria-hidden="true"
      aria-labelledby="earlyClockOutLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">


          <div class="modal-header text-black">
            <h5 class="modal-title" id="earlyClockOutLabel">Early Clock-Out Reason</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>

          <div class="text-black py-2 px-3 mb-0 border-bottom" style="background-color: #f4f4f4 ;" role="alert"
            id="earlyOutAlert">
            <strong>Notice:</strong> Your working hours are less than <strong id="TimeWorking"></strong>. Please
            provide
            a reason
            for early clock-out.
          </div>



          <form action="/employee/erlyclockOut/<%= data.id %>" method="post">
            <div class="modal-body">
              <div class="mb-3">
                <label for="earlyReason" class="form-label">Reason</label>
                <textarea class="form-control" id="earlyReason" name="erlyreson" rows="4"
                  placeholder="Enter your reason here..." required></textarea>
              </div>
            </div>


            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-primary">Submit</button>
            </div>
          </form>

        </div>
      </div>
    </div>

    <!-- Breack Over  -->
    <div class="modal fade" id="breackOver" tabindex="-1" role="dialog" aria-hidden="true"
      aria-labelledby="breackOverLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">


          <div class="modal-header text-black">
            <h5 class="modal-title" id="earlyClockOutLabel">Breakover Reason</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>

          <div class="text-black py-2 px-3 mb-0 border-bottom" style="background-color: #f4f4f4 ;" role="alert"
            id="earlyOutAlert">
            <strong>Notice:</strong> Your break hours have exceeded <strong id="BreackTime"></strong>. Please
            provide a
            reason
          </div>



          <form action="/employee/breackover/<%= data.id %>" method="post">
            <div class="modal-body">
              <div class="mb-3">
                <label for="earlyReason" class="form-label">Reason</label>
                <textarea class="form-control" id="BreakReason" name="breakreason" rows="4"
                  placeholder="Enter your reason here..."></textarea>
              </div>
            </div>


            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-primary">Submit</button>
            </div>
          </form>

        </div>
      </div>
    </div>

    <!-- No Breack Out  -->
    <div class="modal fade" id="NoBreackOut" tabindex="-1" role="dialog" aria-hidden="true"
      aria-labelledby="breackOverLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">


          <div class="modal-header text-black">
            <h5 class="modal-title" id="earlyClockOutLabel">Missing Breakout in <span id="breackInDate2"
                style="font-weight: 800;"></span></h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>

          <form action="/employee/breackOutMiss/<%= data.id %>" method="post">
            <div class="modal-body">
              <div class="row">
                <div class="col-md-6 mb-3">
                  <label for="clockIn" class="form-label">BreakIn Time</label>
                  <input type="text" class="form-control bg-white" id="breackIntime" name="breackIntime" required
                    readonly />
                </div>
                <input type="hidden" class="form-control bg-white" id="breackInDate" name="breackInDate" required
                  readonly />
                <div class="col-md-6 mb-3">
                  <label for="clockOut" class="form-label">BreakOut Out</label>
                  <input type="time" class="form-control" id="breakOutTime" name="breakOutTime" />
                  <small id="breaktimeError" class="text-danger d-none">
                    BreakOut time is too early. Choose a valid time.
                  </small>

                </div>
              </div>
              <div class="row">
                <!-- Reason -->
                <div class="col-12 mb-3">
                  <label for="leaveReason" class="form-label">Reason For Missing Breakout</label>
                  <textarea class="form-control" id="breakoutreason" name="breakoutreason" rows="3"
                    placeholder="Type reason here..." required></textarea>
                </div>
              </div>
            </div>

            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-primary">Submit</button>
            </div>
          </form>

        </div>
      </div>
    </div>
    <!-- Right Sidebar -->

    <%- include('partials/footer.ejs') %>
      <%- include('partials/script.ejs') %>

        <!-- login js-->

        <script src="/js/datepicker/daterange-picker/moment.min.js"></script>
        <script src="/js/datepicker/daterange-picker/daterangepicker.js"></script>
        <script src="/js/datepicker/daterange-picker/daterange-picker.custom.js"></script>

        <!-- imag model path text  -->

        <script>
          document.getElementById("breakOutTime").addEventListener("change", function () {
            const breakOutVal = this.value;
            const breakInVal = document.getElementById("breackIntime").value;

            const breaktimeError = document.getElementById("breaktimeError");



            breaktimeError.classList.add("d-none");


            if (!breakOutVal || !breakInVal) return;


            const [inTime, modifier] = breakInVal.split(" ");
            let [inHours, inMinutes] = inTime.split(":").map(Number);
            if (modifier === "PM" && inHours < 12) inHours += 12;
            if (modifier === "AM" && inHours === 12) inHours = 0;


            const today = new Date();
            const breakInDate = new Date(today.getFullYear(), today.getMonth(), today.getDate(), inHours, inMinutes);
            const [outHours, outMinutes] = breakOutVal.split(":").map(Number);
            const breakOutDate = new Date(today.getFullYear(), today.getMonth(), today.getDate(), outHours, outMinutes);

            const minValidTime = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 9, 0);


            if (breakOutDate < breakInDate) {
              breaktimeError.classList.remove("d-none");
              this.value = "";
              return;
            }
          });
        </script>

        <script>
          document.getElementById("clockOut").addEventListener("change", function () {
            const clockOutVal = this.value;
            const clockInVal = document.getElementById("clockInTime").value;


            const [time, modifier] = clockInVal.split(" ");
            let [hours, minutes] = time.split(":");
            hours = parseInt(hours, 10);

            if (modifier === "PM" && hours < 12) hours += 12;
            if (modifier === "AM" && hours === 12) hours = 0;

            const clockIn24 = `${String(hours).padStart(2, '0')}:${minutes}`;

            if (clockOutVal < clockIn24) {
              document.getElementById("timeError").classList.remove("d-none");
              this.value = "";
            } else {
              document.getElementById("timeError").classList.add("d-none");
            }
          });
        </script>
        <script>

          $('#exampleModalCenter').on('hidden.bs.modal', function () {
            $('#clockout').addClass('d-none');
            $('#break').addClass('d-none');
            $('#clockin').removeClass('d-none');
            $('#fromhom').removeClass('d-none');
            $('.daterangepicker').addClass('d-none')
          });

          function checkIfCurrentDate(input) {
            const selectedDate = input.value;
            const today = new Date().toISOString().split("T")[0];

            if (selectedDate === today || selectedDate > today) {
              input.classList.add("is-invalid");
              document.getElementById("enddate-error").classList.remove("d-none");
              return false;
            } else {
              input.classList.remove("is-invalid");
              document.getElementById("enddate-error").classList.add("d-none");
              return true;
            }
          }

          $('#clockOutMissing').on('hidden.bs.modal', function () {
            $('#clockout').addClass('d-none');
            $('#break').addClass('d-none');
            $('#clockin').removeClass('d-none');
            $('#fromhom').removeClass('d-none');
          });

          function checkIfCurrentDate(input) {
            const selectedDate = input.value;
            const today = new Date().toISOString().split("T")[0];

            if (selectedDate === today || selectedDate > today) {
              input.classList.add("is-invalid");
              document.getElementById("enddate-error").classList.remove("d-none");
              return false;
            } else {
              input.classList.remove("is-invalid");
              document.getElementById("enddate-error").classList.add("d-none");
              return true;
            }
          }

        </script>

        <script>
          document.getElementById("attachment").addEventListener("change", function () {
            const fileList = this.files;
            const fileNameContainer = document.getElementById("file-name");

            if (fileList.length > 0) {
              const names = Array.from(fileList).map((file, index) => `${index + 1}. ${file.name}`);
              fileNameContainer.innerHTML = names.join("<br>");
            } else {
              fileNameContainer.textContent = "No file selected";
            }
          });
        </script>

        <script>
          $(document).ready(function () {
            let workInterval = null;
            let breakInterval = null;

            let workTime = { h: 0, m: 0, s: 0 };
            let breakTime = { h: 0, m: 0, s: 0 };

            function updateTime(time) {
              time.s += 1;
              if (time.s === 60) {
                time.s = 0;
                time.m += 1;
                if (time.m === 60) {
                  time.m = 0;
                  time.h += 1;
                }
              }
            }

            function displayTime(prefix, time) {
              $(`#hou${prefix}`).text(String(time.h).padStart(2, "0"));
              $(`#min${prefix}`).text(String(time.m).padStart(2, "0"));
              $(`#sec${prefix}`).text(String(time.s).padStart(2, "0"));
            }

            (function () {
              const el = document.getElementById("emp-data");

              const breaker = el.dataset.break;
              const work = el.dataset.work;
              const status = el.dataset.status;

              let changework = work.replace(/"/g, "").split(":").map(Number);
              let changebreak = breaker.replace(/"/g, "").split(":").map(Number);

              if (status === "true") {

                workTime = { h: changework[0], m: changework[1], s: changework[2] };
                displayTime("", workTime);
                breakTime = {
                  h: changebreak[0],
                  m: changebreak[1],
                  s: changebreak[2],
                };
                displayTime("2", breakTime);
                startWorkTimer();
                stopBreakTimer();
                $("#clockin").addClass("d-none");
                $("#fromhom").addClass("d-none");
                $("#clockout").removeClass("d-none");
                $("#break").removeClass("d-none");
              } else if (status === "false") {
                workTime = { h: changework[0], m: changework[1], s: changework[2] };
                displayTime("", workTime);
                breakTime = {
                  h: changebreak[0],
                  m: changebreak[1],
                  s: changebreak[2],
                };
                displayTime("2", breakTime);
                stopWorkTimer();
                startBreakTimer();
                $("#clockout").addClass("d-none");
                $("#break").addClass("d-none");
                $("#clockin").removeClass("d-none");
                $("#fromhom").removeClass("d-none");
              } else {
                workTime = { h: changework[0], m: changework[1], s: changework[2] };
                displayTime("", workTime);
                breakTime = {
                  h: changebreak[0],
                  m: changebreak[1],
                  s: changebreak[2],
                };
                displayTime("2", breakTime);
              }
            })();

            function startWorkTimer() {
              workInterval = setInterval(() => {
                updateTime(workTime);
                displayTime("", workTime);
              }, 1000);
            }

            function stopWorkTimer() {
              if (workInterval) {
                clearInterval(workInterval);
                workInterval = null;
              }
            }

            function startBreakTimer() {
              breakInterval = setInterval(() => {
                updateTime(breakTime);

                displayTime("2", breakTime);
              }, 1000);
            }

            function stopBreakTimer() {
              if (breakInterval) {
                clearInterval(breakInterval);
                breakInterval = null;
              }
            }

            let visibilityTimeout;

            window.addEventListener("visibilitychange", () => {
              if (!document.hidden) {
                clearTimeout(visibilityTimeout);

                visibilityTimeout = setTimeout(() => {
                  if (!document.hidden) {
                    let id = $("#emplyeeId").val();

                    $.ajax({
                      url: `/employee/hiddenChange/${id}`,
                      method: "GET",
                      success: function (res) {

                        const breaker = res.Break || "00:00:00";
                        const work = res.Working || "00:00:00";
                        const status = res.status;

                        let changework = work.replace(/"/g, "").split(":").map(Number);
                        let changebreak = breaker.replace(/"/g, "").split(":").map(Number);

                        workTime = { h: changework[0], m: changework[1], s: changework[2] };
                        breakTime = { h: changebreak[0], m: changebreak[1], s: changebreak[2] };

                        displayTime("", workTime);
                        displayTime("2", breakTime);

                        if (status === "true") {

                          $("#clockin").addClass("d-none");
                          $("#fromhom").addClass("d-none");
                          $("#clockout").removeClass("d-none");
                          $("#break").removeClass("d-none");
                        } else if (status === "false") {

                          $("#clockout").addClass("d-none");
                          $("#break").addClass("d-none");
                          $("#clockin").removeClass("d-none");
                          $("#fromhom").removeClass("d-none");
                        }
                      },
                      error: function (err) {
                        console.error("AJAX error:", err);
                      }
                    });
                  }
                }, 300);
              }

            });

            $("#clockin").click(function () {
              stopBreakTimer();
              startWorkTimer();

              let id = $("#emplyeeId").val();

              $.ajax({
                url: `/employee/attendence/${id}`,
                method: "POST",
                success: function (res) {

                  if (res.MissingClockOut === true) {
                    stopWorkTimer();
                    stopBreakTimer();
                    console.log("Hello");


                    $("#clockOutMissing").removeClass("d-none");
                    $("#clockOutMissing").modal("show")
                    $("#lastdaydate").val(res.OldData.date)

                    $("#dateOut").html(`Record for the <strong>${res.OldData.date}</strong> is missing <strong>Clock Out</strong> in the system. Please apply request.`)

                    let allTimeRaw = res.OldData.all_time;

                    let allTimeArray = [];
                    try {
                      allTimeArray = typeof allTimeRaw === "string" ? JSON.parse(allTimeRaw) : allTimeRaw;
                    } catch (err) {
                      console.error("Failed to parse all_time:", err);

                    }

                    let Pmtime = allTimeArray[allTimeArray.length - 1].intime
                    console.log(Pmtime);
                    
                    let timeFormatted = new Date(Pmtime).toLocaleTimeString('en-IN', {
                      hour: '2-digit',
                      minute: '2-digit',
                      hour12: true,
                      timeZone: 'Asia/Kolkata'
                    });


                    let removesecond = timeFormatted.replace(/AM|PM/i, match => match.toUpperCase());
                    $("#clockInTime").val(removesecond)
                  }

                  if (!res.error_msg) {
                    let Break = res.Break.split(":");

                    breakTime = {
                      h: Number(Break[0]),
                      m: Number(Break[1]),
                      s: Number(Break[2]),
                    };
                    displayTime("2", breakTime);

                    let Working = res.WorkingTime.split(":");

                    workTime = {
                      h: Number(Working[0]),
                      m: Number(Working[1]),
                      s: Number(Working[2]),
                    };
                    displayTime("", workTime);




                    if (res.BreakOutEntry && Object.keys(res.BreakOutEntry).length > 0) {
                      $("#NoBreackOut").removeClass("d-none");
                      $("#NoBreackOut").modal("show");
                      $('#clockout').removeClass('d-none');
                      $('#break').removeClass('d-none');
                      $('#clockin').addClass('d-none');

                      stopWorkTimer();
                      stopBreakTimer();

                      // alert("res.BreakOutEntry.intime", res.BreakOutEntry.intime)
                      const rawTime = new Date(res.BreakOutEntry.intime);
                      const formatted = rawTime.toLocaleTimeString('en-US', {
                        hour: '2-digit',
                        minute: '2-digit',
                        hour12: true,
                        minute: '2-digit'
                      });

                      console.log("Formatted Time:", formatted);

                      $('#breackIntime').val(formatted);
                      $('#breackInDate').val(res.BreakOutEntry.intime.split("T")[0].split("-").reverse().join("-"));
                      $("#breackInDate2").text(res.BreakOutEntry.intime.split("T")[0].split("-").reverse().join("-"))
                    }




                    if (res.MissingDates.length > 0) {
                      stopWorkTimer();
                      stopBreakTimer();

                      $("#exampleModalCenter").removeClass("d-none");
                      $("#exampleModalCenter").modal("show");
                      $('.daterangepicker').removeClass('d-none')
                      $(".cancelBtn").click(function () {
                        $('.daterangepicker').addClass('d-none')

                      })
                      $("#datelistnoleave").val(res.firstDates).trigger('input');



                      let satrtDate = `${res.firstDates[0].split('-')[1]}/${res.firstDates[0].split('-')[0]}/${res.firstDates[0].split('-')[2]}`
                      let endDate = `${res.firstDates[res.firstDates.length - 1].split('-')[1]}/${res.firstDates[res.firstDates.length - 1].split('-')[0]}/${res.firstDates[res.firstDates.length - 1].split('-')[2]}`

                      $("#leavelastDate").val(`${satrtDate}-${endDate}`)
                      function formatDateToISO(dateStr) {
                        const parts = dateStr.split("-");
                        if (parts.length === 3) {
                          return `${parts[2]}-${parts[1]}-${parts[0]}`;
                        }
                        return dateStr;
                      }


                      $("#leaveDate").val(formatDateToISO(res.MissingDates[0]));

                    }
                  } else {
                    stopWorkTimer();
                    toastr.error(res.error_msg);
                    $("#clockin").removeClass("d-none");
                    $("#fromhom").removeClass("d-none");
                    $("#clockout").addClass("d-none");
                    $("#break").addClass("d-none");
                  }

                }

              });
              $("#clockin").addClass("d-none");
              $("#fromhom").addClass("d-none");
              $("#clockout").removeClass("d-none");
              $("#break").removeClass("d-none");
            });

            $("#break").click(function () {
              stopWorkTimer();
              startBreakTimer();

              let id = $("#emplyeeId").val();

              $("#clockout").addClass("d-none");
              $("#break").addClass("d-none");
              $("#clockin").removeClass("d-none");
              $("#fromhom").removeClass("d-none");

              $.ajax({
                url: `/employee/attendence/${id}`,
                method: "POST",
                success: function (res) {

                  if (res.BreackOver === true) {
                    $('#breackOver').removeClass("d-none");
                    $('#breackOver').modal("show")
                    $('#BreackTime').text(res.BreackTime)
                    stopWorkTimer();
                    stopBreakTimer();
                  }

                  let Break = res.Break.split(":");

                  breakTime = {
                    h: Number(Break[0]),
                    m: Number(Break[1]),
                    s: Number(Break[2]),
                  };
                  displayTime("2", breakTime);

                  let Working = res.WorkingTime.split(":");

                  workTime = {
                    h: Number(Working[0]),
                    m: Number(Working[1]),
                    s: Number(Working[2]),
                  };
                  displayTime("", workTime);

                },
              });
            });

            $("#clockout").click(function () {

              // Stop both timers
              stopWorkTimer();
              stopBreakTimer();

              // Optional: Log final times (or send them to backend here)


              // UI changes
              $("#clockout").addClass("d-none");
              $("#break").addClass("d-none");
              $("#clockin").removeClass("d-none");
              $("#fromhom").removeClass("d-none");

              // If you want to send final times to backend:
              const id = $("#emplyeeId").val();
              $.ajax({
                url: `/employee/clockout/${id}`,
                method: "POST",

                data: {
                  workTime: `${String(workTime.h).padStart(2, "0")}:${String(
                    workTime.m
                  ).padStart(2, "0")}:${String(workTime.s).padStart(2, "0")}`,
                  breakTime: `${String(breakTime.h).padStart(2, "0")}:${String(
                    breakTime.m
                  ).padStart(2, "0")}:${String(breakTime.s).padStart(2, "0")}`,
                },
                success: function (res) {
                  console.log("Clocked out:", res);

                  if (res.EarlyClockOut === true) {
                    $('#EarlyClockOut').modal("show")
                    $('#EarlyClockOut').removeClass('d-none')
                    $('#TimeWorking').text(res.WorkingTime)
                  }


                },
                error: function (err) {
                  console.error("Clockout error:", err);
                },
              });
            });



            $('#EarlyClockOut').on('hidden.bs.modal', function () {
              $('#clockout').removeClass('d-none');
              $('#break').removeClass('d-none');
              $('#clockin').addClass('d-none');

              startWorkTimer()
            });


            $('#breackOver').on('hidden.bs.modal', function () {
              $('#clockout').removeClass('d-none');
              $('#break').removeClass('d-none');
              $('#clockin').addClass('d-none');

              startWorkTimer();
              stopBreakTimer();
            });


            $('#NoBreackOut').on('hidden.bs.modal', function () {
              $('#clockout').addClass('d-none');
              $('#break').addClass('d-none');
              $('#clockin').removeClass('d-none');

              stopWorkTimer();
              stopBreakTimer();
            });


          });







        </script>

        <script>

          $('#datelistnoleave').on('input change', function () {

            const leaveDatesString = document.getElementById('datelistnoleave').value;

            const leaveDates = leaveDatesString.split(',');

            function formatDateForMatch(day, monthIndex, year) {
              day = day.toString().padStart(2, '0');
              monthIndex = (monthIndex + 1).toString().padStart(2, '0');
              return `${day}-${monthIndex}-${year}`;
            }

            function markLeaveDays() {
              const months = document.querySelectorAll('.calendar-table');
              if (months.length === 0) return;

              months.forEach((monthTable) => {
                const monthText = monthTable.querySelector('thead .month')?.innerText.trim();
                if (!monthText) return;

                const [monthName, yearStr] = monthText.split(' ');
                const monthIndex = new Date(`${monthName} 1, 2000`).getMonth();
                const year = parseInt(yearStr);

                monthTable.querySelectorAll('td.available').forEach((td) => {
                  const dayText = td.innerText.trim();


                  if (!/^\d+$/.test(dayText)) return;

                  const day = parseInt(dayText);


                  const dateFromTd = new Date(year, monthIndex, day);

                  if (dateFromTd.getMonth() !== monthIndex) return;

                  const fullDate = formatDateForMatch(day, monthIndex, year);

                  if (!leaveDates.includes(fullDate)) {
                    td.classList.add('off2');
                    td.style.pointerEvents = 'none';
                    td.style.opacity = '0.5';
                    td.style.cursor = 'not-allowed';
                  } else {
                    td.classList.remove('off2');
                    td.style.pointerEvents = '';
                    td.style.opacity = '';
                    td.style.cursor = '';
                  }
                  document.querySelectorAll('td.off').forEach(function (td) {
                    td.style.visibility = 'hidden';
                  });
                  $(document).on('click', '.applyBtn', function () {
                    $('.daterangepicker').addClass('d-none');
                  });
                });
              });
            }

            const observer = new MutationObserver(() => {
              markLeaveDays();
            });

            observer.observe(document.body, {
              childList: true,
              subtree: true
            });

            markLeaveDays();

            $(document).ready(function () {
              $('#leavelastDate').on('change', function () {
                chengers();
              });
            });
            function chengers() {
              if (typeof leaveDates === "undefined" || !Array.isArray(leaveDates) || leaveDates.length === 0) {
                console.warn("leaveDates is not defined or empty.");
                return;
              }

              function isEndDateAfterLastDate(formattedEnd, lastLeaveDate) {
                function parseDate(dateStr) {
                  const [day, month, year] = dateStr.split("-");
                  return new Date(`${year}-${month}-${day}`);
                }

                const endDate = parseDate(formattedEnd);
                const lastDate = parseDate(lastLeaveDate);

                return endDate > lastDate;
              }

              let endInputEl = document.getElementById('leavelastDate');
              let endDateValue = endInputEl.value;

              let dates = endDateValue.split('-').map(d => d.trim());
              if (dates.length !== 2) return;

              let endDateStrRaw = dates[1];
              let endParts = endDateStrRaw.split('/');
              if (endParts.length !== 3) return;

              let formattedEnd = `${endParts[1]}-${endParts[0]}-${endParts[2]}`;

              if (formattedEnd) {
                let lastLeaveDate = leaveDates[leaveDates.length - 1];
                let firstLeaveDate = leaveDates[0];

                if (isEndDateAfterLastDate(formattedEnd, lastLeaveDate)) {
                  let lastsetDates = lastLeaveDate.split("-");
                  let firstsetleaveDate = firstLeaveDate.split("-");

                  let formatterEndDate = `${lastsetDates[1]}/${lastsetDates[0]}/${lastsetDates[2]}`;
                  let startDateStr = `${firstsetleaveDate[1]}/${firstsetleaveDate[0]}/${firstsetleaveDate[2]}`;

                  endInputEl.value = `${startDateStr} - ${formatterEndDate}`;
                }
              }
            }

          });

          $(document).on('click', '#leavelastDate', function () {
            $('.daterangepicker').removeClass('d-none');
            // $('#leavelastDate')
          });

        </script>






</body>


</html>